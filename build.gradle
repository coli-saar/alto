plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.10.1'
    id 'application'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'groovy'
    id 'antlr'
    id 'ca.coglinc.javacc' version '2.4.0'
    id 'com.github.johnrengelman.shadow' version '7.1.1'
    id 'idea'
}


//to make sure we always use UTF-8 (see https://gist.github.com/rponte/d660919434d094bbd35a1aabf7ef1bf0), otherwise I got errors on Windows -- JG
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
javadoc.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
//    maven { url "http://akci.coli.uni-saarland.de/artifactory/external"
//            allowInsecureProtocol = true }
    maven {url 'https://jitpack.io'}
    maven {url 'https://raw.github.com/coli-saar/alto/repository/'}
}

dependencies {
    antlr   'org.antlr:antlr4:4.7.2'
    api 'com.github.coli-saar:basics:9b78dde236d924e696671b586d7e6eb09309f253'
    api 'it.unimi.dsi:fastutil:8.2.2'
    implementation 'org.springframework:spring-jdbc:4.2.2.RELEASE'
    implementation 'mysql:mysql-connector-java:5.1.37'
    implementation 'edu.stanford.nlp:stanford-corenlp:3.8.0'
    implementation 'edu.mit:jwi:2.2.3'
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'com.google.code.findbugs:jsr305:3.0.0'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    /*
     Mallet incorrectly depends on junit 4.10 even for their runtime code,
     which breaks junit 5 tests in some scenarios.  It is not needed
     at all and we therefore exclude it because otherwise we would export
     it transitively as well.
     */
    implementation ('cc.mallet:mallet:2.0.7') {
        exclude module: "junit"
    }
    implementation 'com.bric.window:windowmenu:1.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    implementation 'net.sf.jgrapht:jgrapht:0.8.3'//possibly update to org.jgrapht:1.3.1 ?
    implementation 'jgraph:jgraph:5.13.0.0'
    implementation 'com.ezware.oxbow:task-dialog:1.3.5'
    implementation 'com.miglayout:miglayout:3.7.4'
    implementation 'org.swinglabs:swing-layout:1.0.3'
    implementation 'com.beust:jcommander:1.69'
    implementation 'com.diffplug.durian:durian:3.1.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.2'
    implementation 'org.jline:jline:3.11.0'
    implementation 'org.jline:jline-terminal-jansi:3.11.0'
    implementation 'me.tongfei:progressbar:0.9.3'

    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.13'
}

// we use raw versions, e.g. 2.3.0
scmVersion {
    tag {
        prefix = ''
    }
}

group = 'com.github.coli-saar'
version = scmVersion.version
description = 'alto'
sourceCompatibility = '1.11'
mainClassName = 'de.up.ling.irtg.main.Alto'
//mainClassName = 'de.up.ling.irtg.script.TulipacParser'


// files generated by javacc are for some reason not added to
// the generatedSourceDirs.  Do it manually so intellij and
// others find those files.
sourceSets.main.java.srcDir new File(buildDir, 'generated/javacc')
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('build/generated/javacc')
    }
}

// travisCI currently reports lots of errors in the javadoc.
// until those are fixed, we need to ignore them.
javadoc {
	failOnError = false
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

// Local Variables:
// groovy-indent-offset: 4
// indent-tabs-mode: nil
// End:
